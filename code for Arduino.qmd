---
title: "uploading the code"
---

In order to become fully operational, a software program needs to be uploaded to the microcontroller board. Here you find this code (or 'sketch', as it is called in Arduino language) for downloading, as well as some additional instructions. The sketch includes all the functions and routines for the system to operate, i.e. to carry out measurements at defined time intervals and to send the data over the LoRa network to the cloud.

There are a few things to explain about this sketch. It is designed to run the FylloClip module in ABP (activation by personalisation) mode, which is one of two possibles modes of establishing a connection of a device to a LoRa network. This is not the officially recommended mode (which would be over the air activation, or OTAA), but it has the advantage of using a much more lightweight library (TinyLoRa) and that under some circumstances it uses less power.

The ABP mode of activating the device requires 3 unique identification keys to be inserted into the sketch before uploading it to the device. These are the **network session key** (NwkSkey), the **application session key** (AppSkey) and **device address** (DevAddr). You will obtain these codes when registering a new end device on the TTS console, after creating your own personal account there. It is important to copy and paste the keys in the hexadecimal format displaying an 0x in front of each number

In addition, for your own use, you can assign an ID-number from 0 - 99 to each device.

![*part of the Arduino sketch with the ID- number in line 11 and the identification keys in lines 15, 18 and 21.*](sketch.png){width="1000"}

This code requires the installation of the TinyLora library. You can install the library with the library manager of the Arduino IDE, which you find unter tools â€“\> manage libraries. The screenshot below provides further details.

After installing the library, you have to find the folder of your PC, where the libraries are installed (normally something like ...Arduino/libraries/TinyLoRa). In this folder edit the file TinyLoRa.h with a text editor and modify, if needed, the settings for the region configuration. In the picture below so see the correct settings for Europe. You can change the settings by commenting or uncommenting the respective lines of interest.

![*TinyLora library*](tinylora.png)

![*select the correct frequency band for your region by commenting/uncommenting the respective lines of code*](frequency_settings.png){width="600"}

You need also to install the Low-Power library from Rocket Scream, which allows the board to go into power-saving sleep mode between measurements.

![Low-Power library](images/lowpowerlibrary.jpg){width="370"}

For uploading the code you need a FTDI adapter. On the adapter select 3.3V power supply by positioning the jumper. This is important because the LoRa module on the board requires a supply voltage of 3.3 V and could be damaged if we set the voltage to 5 V.

![*FTDI adapter*](images/FTDI.png)

If you have installed male pin headers on your microcontroller board, you need to solder a female pin connector onto your FTDI adapter:

![*FTDI adapter with modified connector pins*](images/FTDI_2.png){width="400"}

![*FTDI adapter connected to the microprocessor board for programming*](images/clipboard-2070729821.png){width="300"}

Before uploading the sketch make sure you have the correct board settings in the Arduino IDE: the selected board should be 'Arduino Pro or Pro Mini' with 'ATmega328P(3.3V 8 Mhz)' as processor. Make also sure you have selected the COM port to which the FTDI adapter is connected.

![*Board settings in the Arduino IDE*](images/clipboard-4191342988.png){width="500"}

Download link for the Arduino code:

[Arduino code](https://github.com/FylloClip/tutorial/blob/main/ressources/Arduino%20code/FylloClip_2025/FylloClip_2025.ino)

Once uploaded the sketch, you should be able to communicate with the board via the serial terminal of the IDE. the required settings for the serial monitor are 'no line ending' and '9600 baud':

![](images/clipboard-1287549793.png)

As soon as you start the serial terminal, the menu shown in the above screenshot appears. It will remain active only for a few seconds, after which the board goes into sleep mode. You can reactivate the menu by closing the serial terminal and opening it again. Then type immediately one of the letters of the options in the menu and hit 'enter'.

s - provides you an overview of actual settings and data

r - resets the frame counter to zero.

z - triggers the board to take sensor measurements and to send a data packet

a - allows you to set the desired time interval between successive measurements, with the following options: 01-05-10-15-20-30-60 minutes. Please enter always double digits, e.g. 05 instead of 5. A time interval of 10 minutes has proved to be appropriate.

f - allows you to set the spreading factor for LoRa radio transmission, ranging from 07 to 12. Increasing values mean a longer distance of data transmission, but also at a higher energy and time consumption. So better start with 07 and increase only if necessary.
