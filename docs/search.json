[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "PCBs.html",
    "href": "PCBs.html",
    "title": "PCBs",
    "section": "",
    "text": "Here you can download the production files for the PCB needed to create the control unit (Arduino board) as well as the PCBs used as foliar sensors.\nThe files are provided in two different formats, gerber and EasyEDA. The gerber files can be used directly to place an order with a PCB manufacturer, whereas the EasyEDA files can be uploaded to the EasyEDA PCB design software where they can be edited and modified before placing an order.\n\nArduino board\n\n\n\nArduino board PCB\n\n\nGerber format\nEasyEDA format\n\n\nFylloClip sensors\nWhen ordering the foliar sensors, please make sure to select a PCB thickness of 1 mm. If the thickness is more than 1 mm, the sensor will be too stiff an difficult to be placed on a leaf. I have always chosen the white colour, but probably it does not make much of a difference if you choose another colour.\nlarger size:\n\n\n\nfoliar sensor, larger size\n\n\nGerber format\nEasyEDA format\nsmaller size:\n\n\n\nfoliar sensor, smaller size\n\n\nGerber format\nEasyEDA format",
    "crumbs": [
      "Home",
      "***HARDWARE***",
      "PCBs"
    ]
  },
  {
    "objectID": "instructions for soldering.html",
    "href": "instructions for soldering.html",
    "title": "instructions for soldering",
    "section": "",
    "text": "Download link for a Video showing how to solder the LoRa module onto the main PCB:\nsolder RFM95",
    "crumbs": [
      "Home",
      "***ASSEMBLY***",
      "instructions for soldering"
    ]
  },
  {
    "objectID": "code for Arduino.html",
    "href": "code for Arduino.html",
    "title": "Uploading the code",
    "section": "",
    "text": "In order to become fully operational, a software programme needs to be uploaded to the microcontroller board. Here you find this code (or ‘sketch’, as it is called in Arduino language) for downloading, as well as some additional instructions. The sketch includes all the functions and routines for the system to operate, i.e. to carry out measurements at defined time intervals and to send the data over the LoRa network to the cloud.\nThere are a few things to explain about this sketch. It is designed to run the FylloClip module in ABP (activation by personalization) mode, which is one of two possibles modes of establishing a connection of a device to a LoRa network. This is not the officially recommended mode (which would be over the air activation, or OTAA), but it has the advantage of using a much more lightweight library (TinyLoRa) and that under some circumstances it uses less power.\nThe ABP mode of activating the device requires 3 unique identification keys to be inserted into the sketch before uploading it to the device. These are the network session key (NwkSkey), the application session key (AppSkey) and device address (DevAddr). You will obtain these codes when registering a new end device on the TTS console, after creating your own personal account there. It is important to copy and paste the keys in the hexadecimal format displaying an 0x in front of each number\nIn addition, for your own use, you can assign an ID-number from 0 - 99 to each device.\n\n\n\npart of the Arduino sketch with the ID- number in line 11 and the identification keys in lines 15, 18 and 21.\n\n\n\n\n\nTinyLora library\n\n\n\n\n\nselect the correct frequency band for your region by commenting/uncommenting the respective lines of code\n\n\nYou need also to install the Low-Power library from Rocket Scream, which allows the board to go into power-saving sleep mode between measurements.\nFor uploading the code you need a FTDI adapter. On the adapter select 3.3V power supply by positioning the jumper\n\n\n\nFTDI adapter\n\n\nIf you have installed male pin headers on your microcontroller board, you need to solder a female pin connector onto your FTDI adapter:\n\n\n\nFTDI adapter with modified connector pins\n\n\n\n\n\nFTDI adapter connected to the microprocessor board for programming\n\n\nBefore uploading the sketch make sure you have the correct board settings in the Arduino IDE: the selected board should be ‘Arduino Pro or Pro Mini’ with ‘ATmega328P(3.3V 8 Mhz)’ as processor. Make also sure you have selected the COM port to which the FTDI adapter is connected.\n\n\n\nBoard settings in the Arduino IDE\n\n\nDownload link for the Arduino code:\nArduino code\nOnce uploaded the sketch, you should be able to communicate with the board via the serial terminal of the IDE. the required settings for the serial monitor are ‘no line ending’ and ‘9600 baud’:\n\nAs soon as you start the serial terminal, the menu shown in the above screenshot appears. It will remain active only for a few seconds, after which the board goes into sleep mode. You can reactivate the menu by closing the serial terminal and opening it again. Then type immediately one of the letters of the options in the menu and hit ‘enter’.\ns - provides you an overview of actual settings and data\nr - resets the frame counter to zero.\nz - triggers the board to take sensor measurements and to send a data packet\na - allows you to set the desired time interval between successive measurements, with the following options: 01-05-10-15-20-30-60 minutes. Please enter always double digits, e.g. 05 instead of 5. A time interval of 10 minutes has proved to be appropriate.\nf - allows you to set the spreading factor for LoRa radio transmission, ranging from 07 to 12. Increasing values mean a longer distance of data transmission, but also at a higher energy and time consumption. So better start with 07 and increase only if necessary.",
    "crumbs": [
      "Home",
      "***SOFTWARE***",
      "Uploading the code"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "FylloClip tutorial",
    "section": "",
    "text": "This tutorial is intended to provide all the information needed to build a fully functional FylloClip module capable of remote data transmission via the LoRaWAN network. It will guide you from ordering PCBs (printed circuit boards), purchasing electronic components, assembling and programming the system, to setting up remote data transmission."
  },
  {
    "objectID": "list of components.html",
    "href": "list of components.html",
    "title": "electronic components",
    "section": "",
    "text": "here a list of all the required electronic components:\n\n\n\ncomponent​\nlink​\n\n\nphotodiode​\nhttps://www.reichelt.com​\n\n\nmicrocontroller atmega328 with bootloader for Arduino Pro Mini 3.3V​\nhttps://www.reichelt.com (you need to burn the bootloader onto the chip by yourself)​\n\n\nbattery holder​\nhttps://www.reichelt.com​\n\n\nCrystal 8 Mhz​\nhttps://www.reichelt.com​\n\n\nLoRa mosule RFM95w​\nhttps://www.soselectronic.com​\n\n\nSocket for microcontroller​\nhttps://www.reichelt.com​\n\n\nMale header pins ​\nhttps://www.reichelt.com​\n\n\nFemale header pins​\nhttps://www.reichelt.com (only in case you want to use female headers for the serial port)​\n\n\nResistor 4.7K​\nhttps://www.reichelt.com​\n\n\nResistor 10K​\nhttps://www.reichelt.com​\n\n\nCapacitor 100nF​\nhttps://www.reichelt.com​\n\n\nCapacitor 22pF​\nhttps://www.reichelt.com​\n\n\nStep-up voltage regulator​\nhttps://www.aliexpress.com​",
    "crumbs": [
      "Home",
      "***HARDWARE***",
      "electronic components"
    ]
  }
]