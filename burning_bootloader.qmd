---
title: "burning the bootloader"
---

The bootloader is a small program that must be present on a microcontroller in order to be used in the Arduino environment. The bootloader enables the chip to receive code via the USB connection (using the Arduino IDE).

If you buy an ATmega chip from a supplier of electronic components, most likely it will come without the bootloader. Here you find the instructions on how to upload ('burn') a bootloader with the settings required for our particular purpose on a ATmega328P chip.

There are various possible ways to burn a bootloader, the easiest approach is to use another Arduino as the programming device for the new chip. For more details, see <https://docs.arduino.cc/built-in-examples/arduino-isp/ArduinoISP/>

![](images/clipboard-1379786848.png){width="400"}

The above picture explains the setup with two Arduino Uno boards, one is used as programmer, the other as target. The target is the board which holds the virgin ATmega chip which needs to receive the bootloader. The programmer board will be connected to the PC via the USB cable, the target board will only be connected to the programmer board by 6 jumper wires as shown in the picture above.

As the first step, the sketch 'ArduinoISP' needs to be uploaded onto the 'programmer' Arduino board.

![](images/clipboard-1501411117.png){width="400"}

For this step, the selected type of board in the Arduino IDE must be 'Arduino UNO'

![](images/clipboard-1059456764.png){width="300"}

After uploading this sketch onto the programmer board, change the selection to 'Arduino Pro or Pro Mini' :

![](images/clipboard-1994552068.png){width="300"}

In addition, select the option 'ATmega328 (3.3V 8MHz)' under Tools\>Processor

![](images/clipboard-3814691220.png){width="400"}

Next, select 'Arduino as ISP' as the type of programmer:

![](images/clipboard-2017319832.png){width="400"}

With these settings, activate the command to burn the bootloader onto the target chip:

![](images/clipboard-2460124254.png){width="400"}

If nothing goes wrong, the bootloader should now be transferred onto the target chip. With this setup, however, this process frequently fails due to the not perfectly stable connections with the jumper wires.

In order to avoid such problems, you can assemble a special programming board:

The design for this PCB can be downloaded here. In addition you need two 28-pin sockets, two 16 MHz crystals, four 22pF capacitors and a 6-pin header pin. The process of burning a bootloader will be exactly the same as described above. Of course you will need a ATmega328 chip with Arduino Uno bootloader already present to start with.
